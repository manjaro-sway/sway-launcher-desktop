name: pkgbuild

on:
  workflow_dispatch:
  push:
    branches:
      - master
      - main

jobs:
  pkgbuild:
    runs-on: ubuntu-latest
    container:
      image: docker://manjarosway/manjaro-package:latest
    steps:
      -   
        name: cancel_concurrent
        uses: styfle/cancel-workflow-action@0.7.0
        with:
          access_token: ${{ github.token }}
      - 
        name: checkout
        uses: actions/checkout@v2
      - 
        name: prepare
        run: |
          pacman -Syyu --noconfirm
          sudo chown -R builder .
          echo "AARCH64=$(cat PKGBUILD | grep arch= | sed -e 's/^arch=//' | grep -q aarch64 && echo 'true' || echo false)" >> $GITHUB_ENV
          echo "X86_64=$(cat PKGBUILD | grep arch= | sed -e 's/^arch=//' | grep -q -E -i -w '(x86_64|any)' && echo 'true' || echo false)" >> $GITHUB_ENV
          echo "VERSION=$(cat PKGBUILD | grep pkgver= | sed -e 's/^pkgver=//')-$(cat PKGBUILD | grep pkgrel= | sed -e 's/^pkgrel=//')" >> $GITHUB_ENV
          if [ -f ".github/additional_gpg" ]; then
            while IFS="" read -r key || [ -n "$key" ]; do 
              sudo -u builder gpg --recv-key $key
            done <.github/additional_gpg
          fi
          echo "REPO_NAME=$(echo ${{ github.repository }} | sed 's|/|_|g')" >> $GITHUB_ENV
      - 
        name: create_release
        id: release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: Release ${{ env.VERSION }}
          draft: false
          prerelease: false
      -
        name: pkgbuild_x86_64
        if: ${{ env.X86_64 == 'true' }}
        run: |
          sudo -u builder makepkg -s --noconfirm 
          echo "FILE_NAME_X86_64=$(basename $(find . -type f  \( -name "*x86_64*.zst" -o -name "*any*.zst" \)))" >> $GITHUB_ENV
      - 
        name: upload_release_x86
        if: ${{ env.X86_64 == 'true' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: ./${{ env.FILE_NAME_X86_64 }}
          asset_name: ${{ env.FILE_NAME_X86_64 }}
          asset_content_type: application/zstd
      - 
        name: dispatch_x86_64
        if: ${{ env.X86_64 == 'true' }}
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.DISPATCH }}
          repository: manjaro-sway/packages
          event-type: package_update
          client-payload: '{ "repository": "${{ github.repository }}", "version": "${{ env.VERSION }}", "file_name": "${{ env.FILE_NAME_X86_64 }}"}'
      -
        name: pkgbuild_aarch64
        id: pkgbuild_aarch64
        if: ${{ env.AARCH64 == 'true' }}
        run: |
          sudo -u builder aarch64-makepkg -s --noconfirm | tee aarch64.${REPO_NAME}.$(date +%s).log
          echo "FILE_NAME_AARCH64=$(basename $(find . -type f -regextype posix-extended -regex '^.*(aarch64).*'))" >> $GITHUB_ENV
      -
        name: get version
        run: echo "VERSION="$(find ./pkg -name ".PKGINFO" -exec cat {} \; | grep pkgver | sed -e 's/^pkgver = //')"" >> $GITHUB_ENV
      - 
        name: upload_release_aarch64
        if: ${{ env.AARCH64 == 'true' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: ./${{ env.FILE_NAME_AARCH64 }}
          asset_name: ${{ env.FILE_NAME_AARCH64 }}
          asset_content_type: application/zstd
      - 
        name: dispatch_aarch64
        if: ${{ env.AARCH64 == 'true' }}
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.DISPATCH }}
          repository: manjaro-sway/packages
          event-type: package_update
          client-payload: '{ "repository": "${{ github.repository }}", "version": "${{ env.VERSION }}", "file_name": "${{ env.FILE_NAME_AARCH64 }}"}'
      - 
        name: upload logs
        uses: actions/upload-artifact@v2
        with:
          name: logs
          path: ./*.log
      - 
        name: delete release if pkgbuild failed
        if: ${{ failure() && steps.release.outcome == 'success' && (steps.pkgbuild_aarch64.outcome != 'success' || steps.pkgbuild_x86_64.outcome != 'success') }}
        uses: dev-drprasad/delete-tag-and-release@v0.1.2
        with:
          delete_release: true
          tag_name: ${{ env.VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}